{"version":3,"sources":["webpack://optical-breacher/./assets/example.jpg","webpack://optical-breacher/./src/utils.ts","webpack://optical-breacher/./src/camera.tsx","webpack://optical-breacher/./lib/worker.min.js","webpack://optical-breacher/./lib/tesseract-core.wasm.js","webpack://optical-breacher/./src/ocr.ts","webpack://optical-breacher/./src/solver.ts","webpack://optical-breacher/./src/result.tsx","webpack://optical-breacher/./assets/crop-example.jpg","webpack://optical-breacher/./src/upload.tsx","webpack://optical-breacher/./src/app.tsx"],"names":["byteMap","1","7","5","B","E","F","parseLine","line","bytes","split","map","b","some","byte","useStorage","storageKey","initialState","storedValue","window","localStorage","getItem","state","setState","useState","useEffect","setItem","threshold","context","screenshot","width","height","canvas","resolution","imageData","getImageData","data","cutAt","histo","Array","fill","i","length","Math","round","capThreshold","minCap","minAccu","maxCap","maxAccu","minHistValue","Infinity","range","end","floor","v","putImageData","ratio","Camera","onCapture","dim","setDim","ready","setReady","videoRef","useRef","containerRef","exampleOn","setExampleOn","cameraSelectOn","setCameraSelectOn","furthurHelpOn","setFurthurHelpOn","devices","setDevices","deviceId","setDeviceId","nativeResolutionOn","setNativeResolutionOn","updateDimension","useCallback","current","clientWidth","addEventListener","removeEventListener","navigator","mediaDevices","getUserMedia","audio","video","ideal","undefined","exact","facingMode","then","mediaStream","srcObject","Error","deviceInfos","enumerateDevices","filter","kind","getDevices","pointEventsRef","pinchStartInfoRef","distance","scale","_scale","setScale","parseFloat","onPointerUp","e","prev","pointerId","getDistance","x1","clientX","y1","clientY","x2","y2","sqrt","style","margin","border","flexShrink","display","justifyContent","padding","color","ref","position","overflow","touchAction","alignItems","onPointerDown","onPointerMove","zoomRatioChange","max","min","onPointerCancel","onPointerLeave","onPointerOut","playsInline","onCanPlay","play","objectFit","transform","muted","boxSizing","top","gridTemplateColumns","gridColumn","borderLeft","fontSize","whiteSpace","toFixed","marginTop","marginLeft","href","onClick","src","example","onChange","target","value","label","type","checked","rel","className","marginBottom","document","createElement","camWidth","camHeight","getTracks","getSettings","sourceX","sourceY","sourceH","sourceW","getContext","drawImage","OCR","logger","terminate","Promise","all","this","targetsWorker","matrixWorker","createWorker","tessedit_pageseg_mode","tessedit_ocr_engine_mode","image","results","recognize","rectangle","left","matrixData","targetsData","name","params","worker","langPath","workerPath","corePath","args","load","loadLanguage","initialize","setParameters","getSequences","bufferSize","orientation","index","used","matrixSize","_v","pos","has","join","nr","nc","Set","add","seq","reduce","acc","val","concat","Result","matrix","targets","onStartOver","bufferSizeLocal","setBufferSize","parseInt","hiddenTargets","setHiddenTargets","inputIsValid","final","useMemo","targetsToUse","chosenSeq","totalBufferSize","seqs","strings","String","fromCharCode","row","col","targetStrings","maxScore","withMaxScores","s","stringIndex","score","seqLength","matchedIndices","forEach","ts","startLocation","indexOf","endLocation","push","minSeqLength","slice","evaluate","solve","chosenBytes","matched","backgroundColor","paddingBottom","textTransform","right","borderBottom","paddingLeft","j","float","marginRight","Upload","handleFile","toCameraMode","isDragOn","setIsDragOn","err","setErr","flexBasis","cursor","flexDirection","onDragOver","preventDefault","onDragEnter","currentTarget","onDragLeave","onDrop","item","dataTransfer","items","file","getAsFile","catch","pointerEvents","accept","files","maxHeight","maxWidth","defaultOcrProgress","matrixProgress","targetsProgress","status","defaultOcrResult","finished","deviceType","UAParser","getDevice","App","OCRref","ocrResult","setOcrResult","ocrProgress","setOcrProgress","showInputPage","setShowInputPage","isMobile","setIsMobile","progress","result","lines","chars","res","mostCommonLength","lengths","Object","entries","sort","a","getMostCommonLength","validLines","processMatrix","text","matrixBytes","every","createImageBitmap","ctx","onPaste","clipboardData"],"mappings":"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","file":"798.60b8df22a994b2f5abb5.js","sourcesContent":["export default __webpack_public_path__ + \"lib/example.450cf14c6c6d4f14fede9bd9f9abf560.jpg\";","import { useEffect, useState } from 'react'\n\nconst byteMap: Record<string, string> = {\n  1: '1C',\n  7: '7A',\n  5: '55',\n  B: 'BD',\n  E: 'E9',\n  F: 'FF',\n}\n\nfunction parseLine(line: string) {\n  const bytes = line.split(' ').map(b => byteMap[b])\n\n  // Remove lines such as `EE 1 5` which is usually not a valid line\n  if (bytes.some(byte => !byte)) {\n    return []\n  }\n\n  return bytes\n}\n\nexport function getMostCommonLength<T>(lines: T[][]) {\n  const lengths: Record<number, number> = {}\n  lines.forEach(line => {\n    lengths[line.length] = lengths[line.length] || 0\n    lengths[line.length]++\n  })\n  return parseInt(\n    Object.entries(lengths).sort((a, b) => b[1] - a[1])[0]?.[0] || '0',\n    10\n  )\n}\n\nexport function processMatrix(res: string) {\n  const lines = res\n    .split('\\n')\n    .map(parseLine)\n    .filter(bytes => bytes.length)\n  const mostCommonLength = getMostCommonLength(lines)\n  const validLines = lines.filter(line => line.length === mostCommonLength)\n  const chars = new Set<string>()\n  validLines.forEach(bytes => {\n    bytes.forEach(byte => {\n      chars.add(byte)\n    })\n  })\n\n  return { lines: validLines, chars }\n}\n\n/**\n * TODO: Add more filter methods\n * @param matrixBytes The bytes appeared in the matrix\n */\nexport const processTargets = (res: string, matrixBytes: Set<string>) =>\n  res\n    .split('\\n')\n    .map(parseLine)\n    .filter(\n      bytes =>\n        bytes.length >= 2 &&\n        bytes.length <= 4 &&\n        bytes.every(byte => matrixBytes.has(byte))\n    )\n\nexport function useStorage(storageKey: string, initialState?: any) {\n  const storedValue = window.localStorage.getItem(storageKey) || initialState\n  const [state, setState] = useState(storedValue)\n  useEffect(() => {\n    window.localStorage.setItem(storageKey, state)\n  }, [state])\n\n  return [state, setState] as const\n}\n\n/**\n * Turn the photo into a \"black text on white background\" image.\n * Not very smart, but at least it is adaptive.\n */\nexport function threshold(\n  context: CanvasRenderingContext2D,\n  screenshot: boolean = false\n) {\n  const { width, height } = context.canvas\n  const resolution = width * height\n  const imageData = context.getImageData(0, 0, width, height)\n  const { data } = imageData\n  let cutAt = 128\n\n  if (!screenshot) {\n    // 1. Compute the histogram\n    const histo = Array(256).fill(0)\n    for (let i = 0; i < data.length; i += 4) {\n      // Store the sampled color to the R channel\n      // The RGB to grayscale threshold conversion doesn't need to be very accurate.\n      data[i] = Math.round(\n        data[i] * 0.7 + data[i + 1] * 0.2 + data[i + 2] * 0.1\n      )\n      histo[data[i]]++\n    }\n\n    // 2. Cut off the top 1% bright and top 1% dark region\n    const capThreshold = 0.01\n    let minCap = 0\n    let minAccu = 0\n    for (let i = 0; i < 256; i++) {\n      minAccu += histo[i] || 0\n      if (minAccu > resolution * capThreshold) {\n        minCap = i\n        break\n      }\n    }\n\n    let maxCap = 0\n    let maxAccu = 0\n    for (let i = 255; i >= 0; i--) {\n      maxAccu += histo[i] || 0\n      if (maxAccu > resolution * capThreshold) {\n        maxCap = i\n        break\n      }\n    }\n\n    // 3. Among [minCap, maxCap], search between intensity (brightness) 65% to 90%\n    // and find the place that has the lowest intensity.\n    // This might not work well if the histogram is not \"U\" shaped,\n    // and can be optimized by maybe applying Otsu's method specifically at this area.\n    let minHistValue = Infinity\n    const range = maxCap - minCap\n    const start = minCap + Math.floor(range * 0.65)\n    const end = minCap + range * 0.9\n    for (let i = start; i <= end; i++) {\n      if (histo[i] < minHistValue) {\n        minHistValue = histo[i]\n        cutAt = i\n      }\n    }\n  }\n\n  // 4. Threshold the image.\n  for (let i = 0; i < data.length; i += 4) {\n    const v = data[i] > cutAt ? 0 : 255\n    data[i] = v\n    data[i + 1] = v\n    data[i + 2] = v\n  }\n\n  context.putImageData(imageData, 0, 0)\n}\n","import { PointerEvent, useCallback, useEffect, useRef, useState } from 'react'\n// @ts-ignore\nimport exampleImg from '../assets/example.jpg'\nimport { threshold, useStorage } from './utils'\n\nconst ratio = 16 / 9\nconst maxZoomLevel = 10\n\nexport function Camera({\n  onCapture,\n}: {\n  onCapture(canvas: HTMLCanvasElement): void\n}) {\n  const [dim, setDim] = useState({ width: 240, height: 320 })\n  const [ready, setReady] = useState(false)\n  const videoRef = useRef<HTMLVideoElement>(null)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const [exampleOn, setExampleOn] = useState(false)\n  const [cameraSelectOn, setCameraSelectOn] = useState(false)\n  const [furthurHelpOn, setFurthurHelpOn] = useState(false)\n  const [devices, setDevices] = useState<MediaDeviceInfo[]>()\n  const [deviceId, setDeviceId] = useState<string>()\n  const [nativeResolutionOn, setNativeResolutionOn] = useStorage(\n    'nativeResolutionOn',\n    '1'\n  )\n\n  const updateDimension = useCallback(() => {\n    if (videoRef.current && containerRef.current) {\n      const width = containerRef.current.clientWidth\n      const height = width / ratio\n      videoRef.current.width = width\n      videoRef.current.height = height\n      setDim({ width, height })\n    }\n  }, [setDim])\n\n  useEffect(() => {\n    window.addEventListener('resize', updateDimension)\n    return () => {\n      window.removeEventListener('resize', updateDimension)\n    }\n  }, [updateDimension])\n\n  // Get the video stream from the camera\n  useEffect(() => {\n    try {\n      navigator.mediaDevices\n        .getUserMedia({\n          audio: false,\n          video: {\n            ...(nativeResolutionOn === '1'\n              ? { width: { ideal: 7680 }, height: { ideal: 4320 } }\n              : undefined),\n            ...(deviceId\n              ? { deviceId: { exact: deviceId } }\n              : { facingMode: 'environment' }),\n          },\n        })\n        .then(mediaStream => {\n          videoRef.current!.srcObject = mediaStream\n        })\n    } catch {\n      throw new Error('WebRTC not supported')\n    }\n  }, [deviceId, nativeResolutionOn])\n\n  // Get the list of available video input devices.\n  // Only used when the user clicks \"Camera not working?\"\n  useEffect(() => {\n    const getDevices = async () => {\n      try {\n        const deviceInfos = await navigator.mediaDevices.enumerateDevices()\n        setDevices(deviceInfos.filter(({ kind }) => kind === 'videoinput'))\n      } catch {\n        throw new Error('WebRTC not supported')\n      }\n    }\n    cameraSelectOn && getDevices()\n  }, [cameraSelectOn])\n\n  // Below for pinch to zoom\n  const pointEventsRef = useRef<PointerEvent<HTMLDivElement>[]>([])\n  const pinchStartInfoRef = useRef({ distance: 1, scale: 1 })\n  const [_scale, setScale] = useStorage('zoomScale', 1)\n  const scale = parseFloat(_scale)\n  const onPointerUp = (e: PointerEvent<HTMLDivElement>) => {\n    pointEventsRef.current = pointEventsRef.current.filter(\n      prev => prev.pointerId !== e.pointerId\n    )\n  }\n  const getDistance = () => {\n    const x1 = pointEventsRef.current[0].clientX\n    const y1 = pointEventsRef.current[0].clientY\n    const x2 = pointEventsRef.current[1].clientX\n    const y2 = pointEventsRef.current[1].clientY\n    return Math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2)\n  }\n\n  return (\n    <>\n      <div\n        style={{\n          margin: 16,\n          border: '1px solid #ff606060',\n          flexShrink: 0,\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            padding: '0 4px',\n            color: '#cfed57',\n          }}\n        >\n          <div>CODE MATRIX</div>\n          <div>SEQUENCE</div>\n        </div>\n        <div\n          ref={containerRef}\n          style={{\n            position: 'relative',\n            // Fix a weird bug that the video goes outside of the <video> frame on android emulator\n            // Also necessary for pinch to zoom\n            overflow: 'hidden',\n            // For pinch to zoom\n            touchAction: 'none',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n          onPointerDown={e => {\n            pointEventsRef.current = [...pointEventsRef.current, e]\n            // 2 finger pinch zoom starts\n            if (pointEventsRef.current.length === 2) {\n              pinchStartInfoRef.current = {\n                distance: getDistance(),\n                scale,\n              }\n            }\n          }}\n          onPointerMove={e => {\n            pointEventsRef.current = pointEventsRef.current.map(prev =>\n              prev.pointerId === e.pointerId ? e : prev\n            )\n            if (pointEventsRef.current.length === 2) {\n              const zoomRatioChange =\n                getDistance() / pinchStartInfoRef.current.distance\n              setScale(\n                Math.max(\n                  Math.min(\n                    pinchStartInfoRef.current.scale * zoomRatioChange,\n                    maxZoomLevel\n                  ),\n                  1\n                )\n              )\n            }\n          }}\n          onPointerUp={onPointerUp}\n          onPointerCancel={onPointerUp}\n          onPointerLeave={onPointerUp}\n          onPointerOut={onPointerUp}\n        >\n          <video\n            ref={videoRef}\n            playsInline\n            onCanPlay={() => {\n              videoRef?.current?.play()\n              setReady(true)\n              updateDimension()\n            }}\n            style={{\n              objectFit: 'cover',\n              transform: `scale(${scale})`,\n            }}\n            muted\n          />\n          {ready && (\n            <div\n              style={{\n                boxSizing: 'border-box',\n                position: 'absolute',\n                display: 'grid',\n                top: 0,\n                gridTemplateColumns: '5fr 2fr',\n                padding: 4,\n                // Ideally \"100%\" is enough, but it doesn't work on iOS\n                width: dim.width,\n                height: dim.height,\n              }}\n            >\n              <div\n                style={{\n                  gridColumn: 1,\n                  border: '1px dashed #cfed57',\n                }}\n              />\n              <div\n                style={{\n                  gridColumn: 2,\n                  border: '1px dashed #cfed57',\n                  borderLeft: 0,\n                }}\n              />\n            </div>\n          )}\n        </div>\n        <div\n          style={{\n            fontSize: '0.4em',\n            color: '#ff606080',\n            margin: 2,\n            whiteSpace: 'pre',\n          }}\n        >\n          ZOOM_RATIO{'    '}\n          {scale.toFixed(6)}x\n        </div>\n      </div>\n\n      <div style={{ margin: 16, marginTop: 0, overflow: 'auto' }}>\n        Move the camera closer to the screen (or use pinch zoom) to avoid\n        unnecessary contents. Don't rotate or tilt.\n        <a\n          style={{ marginLeft: 4 }}\n          href=\"#\"\n          onClick={() => {\n            setExampleOn(!exampleOn)\n          }}\n        >\n          {exampleOn ? 'Hide' : 'Show'} the example\n        </a>\n        {exampleOn && (\n          <div>\n            <img style={{ width: '70%' }} src={exampleImg} />\n          </div>\n        )}\n        <div style={{ marginTop: 8 }}>\n          {!cameraSelectOn ? (\n            <a\n              onClick={() => {\n                setCameraSelectOn(true)\n              }}\n              href=\"#\"\n            >\n              Camera not working?\n            </a>\n          ) : (\n            <>\n              <div>- Specify the camera to use:</div>\n              <select\n                onChange={e => {\n                  setDeviceId(e.target.value)\n                }}\n                value={deviceId}\n              >\n                {devices &&\n                  devices.map(({ label, deviceId }, i) => (\n                    <option value={deviceId} key={deviceId}>\n                      {i + 1}: {label}\n                    </option>\n                  ))}\n              </select>\n              <label style={{ display: 'block', marginTop: 8 }}>\n                -\n                <input\n                  type=\"checkbox\"\n                  checked={nativeResolutionOn === '1'}\n                  onChange={() => {\n                    setNativeResolutionOn(\n                      nativeResolutionOn === '0' ? '1' : '0'\n                    )\n                  }}\n                />\n                Use native resolution{' '}\n                <small style={{ fontSize: '0.6em' }}>\n                  (turning it off may fix the black camera issue)\n                </small>\n              </label>\n              {!furthurHelpOn ? (\n                <a\n                  onClick={() => {\n                    setFurthurHelpOn(true)\n                  }}\n                  href=\"#\"\n                >\n                  Still not working?\n                </a>\n              ) : (\n                <>\n                  <p>\n                    iOS user: Please use Safari browser (see{' '}\n                    <a\n                      href=\"https://stackoverflow.com/a/29164511\"\n                      rel=\"noopener\"\n                      target=\"_blank\"\n                    >\n                      why\n                    </a>\n                    ). Make sure you have granted access to the camera (Settings\n                    - Safari - Camera - choose \"Ask\")\n                  </p>\n                  <p>\n                    Android user: If none of the options above work, please\n                    check{' '}\n                    <a\n                      href=\"https://github.com/govizlora/optical-breacher/issues/7\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      this issue\n                    </a>\n                    .\n                  </p>\n                </>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n\n      <button\n        className=\"main\"\n        style={{\n          margin: 'auto',\n          marginBottom: 24,\n        }}\n        onClick={() => {\n          const canvas = document.createElement('canvas')\n          const mediaStream = videoRef.current!.srcObject as MediaStream\n          const {\n            width: camWidth = 1,\n            height: camHeight = 1,\n          } = mediaStream.getTracks()[0].getSettings()\n          let sourceX = 0\n          let sourceY = 0\n          let sourceH = camHeight / scale\n          let sourceW = camWidth / scale\n          const context = canvas.getContext('2d')!\n          if (camWidth / camHeight > ratio) {\n            // The camera very wide\n            sourceW = sourceH * ratio\n            canvas.height = Math.min(sourceH, 720)\n            canvas.width = canvas.height * ratio\n          } else {\n            // The camera is very tall\n            sourceH = sourceW / ratio\n            canvas.width = Math.min(sourceW, 1280)\n            canvas.height = canvas.width / ratio\n          }\n          sourceX = (camWidth - sourceW) / 2\n          sourceY = (camHeight - sourceH) / 2\n          context.drawImage(\n            videoRef.current!,\n            sourceX,\n            sourceY,\n            sourceW,\n            sourceH,\n            0,\n            0,\n            canvas.width,\n            canvas.height\n          )\n          threshold(context)\n          onCapture(canvas)\n        }}\n      >\n        SCAN\n      </button>\n    </>\n  )\n}\n","export default __webpack_public_path__ + \"lib/worker.min.6ae4421cc24575c3996815e8a7e47a34.js\";","export default __webpack_public_path__ + \"lib/tesseract-core.wasm.e4db7f953ac7bcf9f67bd39031e42241.js\";","import {\n  createWorker,\n  OEM,\n  PSM,\n  ImageLike,\n  Page,\n  WorkerParams,\n  Worker,\n} from 'tesseract.js'\n// @ts-ignore\nimport workerPath from '../lib/worker.min.js'\n// @ts-ignore\nimport corePath from '../lib/tesseract-core.wasm.js'\n\nexport type Logger = (packet: {\n  name: string\n  status: string\n  progress?: number\n}) => void\n\n// For a screenshot or mobile photo that meets the requirement,\n// the safest ratio that cuts the 2\n// (65% for the matrix and 35% for the target sequences)\nconst cutRatio = 0.65\n\nexport class OCR {\n  private matrixWorker: Promise<Worker>\n  private targetsWorker: Promise<Worker>\n\n  constructor(private logger: Logger) {\n    this.matrixWorker = this.createWorker('matrix', {\n      tessedit_pageseg_mode: PSM.SINGLE_BLOCK,\n      tessedit_ocr_engine_mode: OEM.LSTM_ONLY,\n    })\n    this.targetsWorker = this.createWorker('targets', {\n      tessedit_pageseg_mode: PSM.SINGLE_BLOCK,\n      tessedit_ocr_engine_mode: OEM.LSTM_ONLY,\n    })\n  }\n\n  public terminate = async () =>\n    Promise.all([\n      (await this.targetsWorker).terminate(),\n      (await this.matrixWorker).terminate,\n    ])\n\n  // Multiple Rectangles (with scheduler to do recognition in parallel):\n  // https://github.com/naptha/tesseract.js/blob/master/docs/examples.md\n  public async recognize(image: ImageLike, width: number, height: number) {\n    const matrixWorker = await this.matrixWorker\n    const targetsWorker = await this.targetsWorker\n    const results = await Promise.all([\n      matrixWorker.recognize(image, {\n        rectangle: { left: 0, top: 0, width: width * cutRatio, height },\n      }),\n      targetsWorker.recognize(image, {\n        rectangle: {\n          left: width * cutRatio,\n          top: 0,\n          width: width * (1 - cutRatio),\n          height,\n        },\n      }),\n    ])\n    return {\n      matrixData: results[0].data as Page,\n      targetsData: results[1].data as Page,\n    }\n  }\n\n  private async createWorker(name: string, params: Partial<WorkerParams>) {\n    const worker = createWorker({\n      langPath: './lib',\n      workerPath,\n      corePath,\n      logger: args => this.logger({ name, ...args }),\n    })\n    await worker.load()\n    await worker.loadLanguage('cyber')\n    await worker.initialize('cyber')\n    await worker.setParameters(params)\n    return worker\n  }\n}\n","type Orientation = 'col' | 'row'\n\nconst getSequences = ({\n  bufferSize,\n  orientation,\n  index,\n  used,\n  matrixSize,\n}: {\n  bufferSize: number\n  matrixSize: number\n  orientation: Orientation\n  index: number\n  used: Set<string>\n}): number[][][] =>\n  bufferSize === 0\n    ? [[]]\n    : Array(matrixSize)\n        .fill(null)\n        // [row, col]\n        .map((_v, i) => (orientation === 'row' ? [index, i] : [i, index]))\n        .filter(pos => !used.has(pos.join(',')))\n        .map(([nr, nc]) =>\n          getSequences({\n            bufferSize: bufferSize - 1,\n            orientation: orientation === 'row' ? 'col' : 'row',\n            index: orientation === 'row' ? nc : nr,\n            used: new Set(used).add(`${nr},${nc}`),\n            matrixSize,\n          }).map(seq => [[nr, nc], ...seq])\n        )\n        // Not using flat to support older browsers\n        // since I won't want to add polyfills\n        .reduce((acc, val) => acc.concat(val), [])\n\nconst evaluate = (\n  seqs: number[][][],\n  matrix: string[][],\n  targets: string[][]\n) => {\n  const strings = seqs.map(seq =>\n    String.fromCharCode(\n      ...seq.map(([row, col]) => parseInt(matrix[row][col], 16))\n    )\n  )\n  const targetStrings = targets.map(target =>\n    String.fromCharCode(...target.map(v => parseInt(v, 16)))\n  )\n  let maxScore = 0\n  const evaluated = strings.map((s, stringIndex) => {\n    let score = 0\n    let seqLength = 0\n    const matchedIndices: number[] = []\n    targetStrings.forEach((ts, i) => {\n      const startLocation = s.indexOf(ts)\n      if (startLocation > -1) {\n        score += 1 + 0.1 * i\n        const endLocation = startLocation + ts.length\n        seqLength = Math.max(seqLength, endLocation)\n        matchedIndices.push(i)\n      }\n    })\n    maxScore = Math.max(score, maxScore)\n    return { score, stringIndex, seqLength, matchedIndices }\n  })\n  const withMaxScores = evaluated.filter(({ score }) => score === maxScore)\n  const minSeqLength = Math.min(\n    ...withMaxScores.map(({ seqLength }) => seqLength)\n  )\n  const finals = withMaxScores.filter(\n    ({ seqLength }) => seqLength === minSeqLength\n  )\n  const chosen = finals.map(({ stringIndex, matchedIndices }) => ({\n    seq: seqs[stringIndex].slice(0, minSeqLength),\n    matchedIndices,\n  }))\n  return chosen\n}\n\nexport function solve(\n  matrix: string[][],\n  targets: string[][],\n  totalBufferSize: number\n) {\n  // console.time(\"getSequences\");\n  const sequences = getSequences({\n    bufferSize: totalBufferSize,\n    orientation: 'row',\n    index: 0,\n    used: new Set(),\n    matrixSize: matrix.length,\n  })\n  // console.timeEnd(\"getSequences\");\n\n  // const preview = (seqs: number[][][]) =>\n  //   seqs.map((seq) => seq.map(([row, col]) => matrix[row][col]).join(\" -> \"));\n\n  return evaluate(sequences, matrix, targets)\n}\n","import { useMemo, useState } from 'react'\nimport { solve } from './solver'\n\nexport function Result({\n  matrix,\n  targets,\n  onStartOver,\n}: {\n  matrix: string[][]\n  targets: string[][]\n  onStartOver(): void\n}) {\n  const bufferSizeLocal = window.localStorage.getItem('buffer_size') || '8'\n  const [bufferSize, setBufferSize] = useState(parseInt(bufferSizeLocal, 10))\n  const [hiddenTargets, setHiddenTargets] = useState<Set<string>>(new Set())\n  const inputIsValid =\n    matrix.length > 2 && targets.length && matrix[0].length > 2\n  const final = useMemo(() => {\n    const targetsToUse = targets.filter(\n      target => !hiddenTargets.has(target.join('-'))\n    )\n    if (inputIsValid && targetsToUse.length && bufferSize) {\n      const chosens = solve(matrix, targetsToUse, bufferSize)\n      const chosenSeq = chosens[0] || { seq: [], matchedIndices: [] }\n      const chosenBytes: Record<string, number> = {}\n      chosenSeq.seq.forEach(([row, col], i) => {\n        chosenBytes[`${row},${col}`] = i\n      })\n      return { chosenBytes, matched: new Set(chosenSeq.matchedIndices) }\n    }\n    return { chosenBytes: {} as Record<string, number>, matched: new Set() }\n  }, [matrix, targets, bufferSize, hiddenTargets, inputIsValid])\n\n  if (!inputIsValid) {\n    throw Error('OCR result unacceptable')\n  }\n\n  return (\n    <>\n      <div style={{ margin: '8px 16px' }}>\n        <label>BUFFER SIZE:</label>\n        <input\n          type=\"number\"\n          min={2}\n          max={10}\n          name=\"buffer-size\"\n          style={{\n            marginLeft: 8,\n          }}\n          value={bufferSize}\n          onChange={e => {\n            const bufferSize = Math.min(\n              Math.max(parseInt(e.target.value, 10), 4),\n              8\n            )\n            setBufferSize(bufferSize)\n            window.localStorage.setItem('buffer_size', `${bufferSize}`)\n          }}\n        />\n      </div>\n      <div\n        style={{\n          margin: 16,\n          marginTop: 0,\n          border: '1px solid #cfed5780',\n          backgroundColor: '#120f18',\n          paddingBottom: 8,\n        }}\n      >\n        <div\n          style={{\n            backgroundColor: '#cfed57',\n            color: 'black',\n            padding: '4px 16px',\n            marginBottom: 8,\n          }}\n        >\n          BEST ROUTE\n        </div>\n        {matrix.map((line, row) => (\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n            key={`${line.join('-')}-${row}`}\n          >\n            {line.map((byte, col) => {\n              const index = final.chosenBytes[`${row},${col}`]\n              return (\n                <span\n                  style={{\n                    position: 'relative',\n                    display: 'inline-flex',\n                    color: index !== undefined ? '#ccee70' : '#ccee7060',\n                    fontSize: '1.2em',\n                    textTransform: 'uppercase',\n                    width: 40,\n                    height: 32,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                  key={`${byte}-${col}`}\n                >\n                  {byte}\n                  {index !== undefined && (\n                    <span\n                      style={{\n                        position: 'absolute',\n                        fontSize: '0.6em',\n                        top: 0,\n                        right: 0,\n                      }}\n                    >\n                      {index + 1}\n                    </span>\n                  )}\n                </span>\n              )\n            })}\n          </div>\n        ))}\n      </div>\n\n      <div\n        style={{\n          margin: 16,\n          marginTop: 0,\n          border: '1px solid #cfed5780',\n          backgroundColor: '#120f18',\n          paddingBottom: 8,\n        }}\n      >\n        <div\n          style={{\n            color: '#cfed57',\n            padding: '4px 16px',\n            marginBottom: 8,\n            borderBottom: '1px solid #cfed5780',\n          }}\n        >\n          TARGET SEQUENCES\n        </div>\n        {targets\n          .filter(target => !hiddenTargets.has(target.join('-')))\n          .map((target, i) => (\n            <div style={{ paddingLeft: 16 }} key={target.join('-')}>\n              {target.map((byte, j) => (\n                <div\n                  style={{\n                    display: 'inline-flex',\n                    color: final.matched.has(i) ? '#cfed57' : '#FFFFFF40',\n                    fontSize: '1.1em',\n                    textTransform: 'uppercase',\n                    width: 32,\n                    height: 28,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                  key={`${byte}-${j}`}\n                >\n                  {byte}\n                </div>\n              ))}\n              <a\n                style={{\n                  display: 'float',\n                  float: 'right',\n                  marginRight: 16,\n                  color: '#cfed57',\n                }}\n                onClick={() => {\n                  setHiddenTargets(new Set(hiddenTargets).add(target.join('-')))\n                }}\n                href=\"#\"\n              >\n                Remove\n              </a>\n            </div>\n          ))}\n      </div>\n      <button\n        style={{\n          margin: 'auto',\n          marginBottom: 24,\n        }}\n        onClick={onStartOver}\n        className=\"main\"\n      >\n        START OVER\n      </button>\n    </>\n  )\n}\n","export default __webpack_public_path__ + \"lib/crop-example.e9de0e49471f69deefc6b011e4a57fa1.jpg\";","import { useState } from 'react'\n// @ts-ignore\nimport exampleImg from '../assets/crop-example.jpg'\n\nexport const Upload = ({\n  handleFile,\n  toCameraMode,\n}: {\n  handleFile(file: File): Promise<void>\n  toCameraMode(): void\n}) => {\n  const [isDragOn, setIsDragOn] = useState(false)\n  const [err, setErr] = useState('')\n  const [exampleOn, setExampleOn] = useState(false)\n\n  return (\n    <>\n      <label\n        style={{\n          margin: 16,\n          flexBasis: 300,\n          cursor: 'pointer',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'start',\n          justifyContent: 'center',\n          padding: '0 48px',\n          ...(isDragOn && { backgroundColor: '#ff606020' }),\n        }}\n        className=\"dropzone\"\n        onDragOver={e => {\n          e.preventDefault()\n        }}\n        onDragEnter={e => {\n          e.target === e.currentTarget && setIsDragOn(true)\n        }}\n        onDragLeave={e => {\n          e.target === e.currentTarget && setIsDragOn(false)\n        }}\n        onDrop={async e => {\n          setIsDragOn(false)\n          e.preventDefault()\n          const item = e.dataTransfer?.items?.[0]\n          const file = item.kind === 'file' ? item.getAsFile() : null\n          file &&\n            handleFile(file).catch(() => {\n              setErr('Invalid image')\n            })\n        }}\n      >\n        <div style={{ pointerEvents: 'none' }}>\n          <div>To start, you can:</div>\n          <div>- Drag an image into the box</div>\n          <div>- or click the box to upload an image</div>\n          <div>\n            - or make an in-game screenshot using WIN + SHIFT + S, then CTRL + V\n            here\n          </div>\n        </div>\n\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          style={{ display: 'none' }}\n          onChange={e => {\n            const file = e.target.files?.[0]\n            file &&\n              handleFile(file).catch(() => {\n                setErr('Invalid image')\n              })\n          }}\n        />\n      </label>\n      {err && <div style={{ marginLeft: 16 }}>Error: {err}</div>}\n      <div style={{ margin: '0 16px' }}>\n        Please crop the screenshot before uploading.\n        <a\n          style={{ marginLeft: 4 }}\n          href=\"#\"\n          onClick={() => {\n            setExampleOn(!exampleOn)\n          }}\n        >\n          {exampleOn ? 'Hide' : 'Show'} the example\n        </a>\n        {exampleOn && (\n          <div>\n            <img\n              style={{ maxHeight: 240, maxWidth: '100%' }}\n              src={exampleImg}\n            />\n          </div>\n        )}\n      </div>\n      <div style={{ margin: '8px 16px' }}>\n        Alternatively, you can{' '}\n        <a href=\"#\" onClick={toCameraMode}>\n          use the camera\n        </a>\n      </div>\n    </>\n  )\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { Camera } from './camera'\nimport { Logger, OCR } from './ocr'\nimport { Result } from './result'\nimport { processMatrix, processTargets, threshold } from './utils'\nimport { UAParser } from 'ua-parser-js'\nimport { Upload } from './upload'\n\nconst defaultOcrProgress = { matrixProgress: 0, targetsProgress: 0, status: '' }\nconst defaultOcrResult: {\n  matrix: string[][]\n  targets: string[][]\n  finished: boolean\n} = { matrix: [], targets: [], finished: false }\nconst parser = new UAParser()\nconst deviceType = parser.getDevice()?.type\n\n// const matrix = [\n//   [\"1c\", \"55\", \"ff\", \"bd\", \"e9\"],\n//   [\"bd\", \"1c\", \"e9\", \"ff\", \"e9\"],\n//   [\"55\", \"bd\", \"ff\", \"1c\", \"1c\"],\n//   [\"e9\", \"bd\", \"1c\", \"55\", \"55\"],\n//   [\"55\", \"e9\", \"bd\", \"55\", \"ff\"]\n// ];\n\n// const targets = [\n//   [\"e9\", \"55\"],\n//   [\"55\", \"bd\", \"e9\"],\n//   [\"ff\", \"1c\", \"bd\", \"e9\"],\n//   [\"55\", \"1c\", \"ff\", \"55\"]\n// ];\n\nexport default function App() {\n  const OCRref = useRef<OCR>()\n  const [ocrResult, setOcrResult] = useState(defaultOcrResult)\n  const [ocrProgress, setOcrProgress] = useState(defaultOcrProgress)\n  const [showInputPage, setShowInputPage] = useState(true)\n  // const canvasRef = useRef<HTMLCanvasElement>(null)\n  // const [outputs, setOutputs] = useState<string[]>([])\n\n  const [isMobile, setIsMobile] = useState(\n    deviceType === 'mobile' || deviceType === 'tablet'\n  )\n\n  const logger: Logger = useCallback(({ name, status, progress = 0 }) => {\n    if (status === 'recognizing text') {\n      setOcrProgress(prev => ({\n        status,\n        matrixProgress: name === 'matrix' ? progress : prev.matrixProgress,\n        targetsProgress: name === 'targets' ? progress : prev.targetsProgress,\n      }))\n    }\n  }, [])\n\n  useEffect(() => {\n    OCRref.current = new OCR(logger)\n    return () => {\n      OCRref.current?.terminate()\n    }\n  }, [])\n\n  // Run the OCR and data cleaning.\n  const onCapture = useCallback(async canvas => {\n    setShowInputPage(false)\n    setOcrProgress(defaultOcrProgress)\n    setOcrResult(defaultOcrResult)\n    const result = await OCRref.current!.recognize(\n      canvas,\n      canvas.width,\n      canvas.height\n    )\n    const { lines: matrix, chars } = processMatrix(result.matrixData.text)\n    const targets = processTargets(result.targetsData.text, chars)\n    setOcrResult({ matrix, targets, finished: true })\n    // setOutputs([\n    //   'Matrix:',\n    //   ...result.matrixData.text.split('\\n'),\n    //   '===result:',\n    //   ...matrix.map(l => l.join(' ')),\n    //   'Targets',\n    //   ...result.targetsData.text.split('\\n'),\n    //   '===result:',\n    //   ...processTargets(result.targetsData.text, chars).map(l => l.join(' '))\n    // ]);\n    // if (canvasRef.current) {\n    //   canvasRef.current.width = canvas.width\n    //   canvasRef.current.height = canvas.height\n    //   canvasRef.current.getContext('2d')?.drawImage(canvas, 0, 0)\n    // }\n  }, [])\n\n  // For screenshots.\n  // Convert the file to OCR ready image\n  const handleFile = useCallback(\n    async (file: File) => {\n      const image = await createImageBitmap(file)\n      // const canvas = canvasRef.current!\n      const canvas = document.createElement('canvas')\n      const ctx = canvas.getContext('2d')!\n      canvas.width = Math.min(image.width, 1280)\n      canvas.height = (canvas.width / image.width) * image.height\n      ctx.drawImage(\n        image,\n        0,\n        0,\n        image.width,\n        image.height,\n        0,\n        0,\n        canvas.width,\n        canvas.height\n      )\n      threshold(ctx, true)\n      onCapture(canvas)\n    },\n    [onCapture]\n  )\n\n  // Support Ctrl + V anywhere\n  useEffect(() => {\n    const onPaste = (e: ClipboardEvent) => {\n      if (isMobile) {\n        return\n      }\n      e.preventDefault()\n      const item = e.clipboardData?.items?.[0]\n      const file = item?.kind === 'file' ? item.getAsFile() : null\n      file && handleFile(file)\n    }\n    document.addEventListener('paste', onPaste)\n    return () => {\n      document.removeEventListener('paste', onPaste)\n    }\n  }, [handleFile, isMobile])\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: 'calc(100% - 16px)',\n          border: '1px solid #ff606080',\n        }}\n      >\n        {showInputPage ? (\n          isMobile ? (\n            <Camera onCapture={onCapture} />\n          ) : (\n            <Upload\n              handleFile={handleFile}\n              toCameraMode={() => {\n                setIsMobile(true)\n              }}\n            />\n          )\n        ) : ocrResult.finished ? (\n          <Result\n            matrix={ocrResult.matrix}\n            targets={ocrResult.targets}\n            onStartOver={() => {\n              setShowInputPage(true)\n            }}\n          />\n        ) : (\n          <progress\n            style={{ margin: 'auto' }}\n            value={\n              ocrProgress.status === 'recognizing text'\n                ? (ocrProgress.matrixProgress + ocrProgress.targetsProgress) / 2\n                : 0\n            }\n          />\n        )}\n        {/* <div>\n          <canvas ref={canvasRef} />\n        </div> */}\n        {/* outputs.map(o => <div>{o}</div>) */}\n      </div>\n\n      <div\n        style={{\n          height: 16,\n          fontSize: '0.6em',\n          display: 'flex',\n          color: '#ff6060a0',\n        }}\n      >\n        <span style={{ marginRight: 4 }}>OPTICAL BREACHER MK.1 Rev 1.6</span>\n        <a\n          style={{ marginLeft: 'auto', color: 'inherit' }}\n          href=\"https://github.com/govizlora/optical-breacher\"\n          rel=\"noopener\"\n          target=\"_blank\"\n        >\n          GITHUB\n        </a>\n        <a\n          style={{ marginLeft: 4, color: 'inherit' }}\n          href=\"#\"\n          onClick={() => {\n            setIsMobile(!isMobile)\n            setShowInputPage(true)\n          }}\n        >\n          {isMobile ? 'SCREENSHOT MODE' : 'CAMERA MODE'}\n        </a>\n      </div>\n    </>\n  )\n}\n"],"sourceRoot":""}